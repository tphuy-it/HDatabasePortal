// <auto-generated />
using System;
using HDatabasePortal.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace HDatabasePortal.Data.Migrations
{
    [DbContext(typeof(HDatabasePortalContext))]
    [Migration("20210902125930_RemoveTableNameForFieldName")]
    partial class RemoveTableNameForFieldName
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("HDatabasePortal.Data.Entities.DanToc.DanhMuc_DanToc", b =>
                {
                    b.Property<string>("Ma")
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("MoTa")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Ten")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TenKhac")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Ma");

                    b.ToTable("DanhMuc_DanToc");
                });

            modelBuilder.Entity("HDatabasePortal.Data.Entities.DiaPhuong.DanhMuc_CapQuanHuyen", b =>
                {
                    b.Property<string>("Ma")
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("Ten")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Ma");

                    b.ToTable("DanhMuc_CapQuanHuyen");
                });

            modelBuilder.Entity("HDatabasePortal.Data.Entities.DiaPhuong.DanhMuc_CapTinhThanh", b =>
                {
                    b.Property<string>("Ma")
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("Ten")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Ma");

                    b.ToTable("DanhMuc_CapTinhThanh");
                });

            modelBuilder.Entity("HDatabasePortal.Data.Entities.DiaPhuong.DanhMuc_CapXaPhuong", b =>
                {
                    b.Property<string>("Ma")
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("Ten")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Ma");

                    b.ToTable("DanhMuc_CapXaPhuong");
                });

            modelBuilder.Entity("HDatabasePortal.Data.Entities.DiaPhuong.DanhMuc_ChauLuc", b =>
                {
                    b.Property<string>("MaM49")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("MoTa")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("TenTA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TenTV")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("MaM49");

                    b.ToTable("DanhMuc_ChauLuc");
                });

            modelBuilder.Entity("HDatabasePortal.Data.Entities.DiaPhuong.DanhMuc_KhuVucQuocGia", b =>
                {
                    b.Property<string>("MaM49")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("ChauLuc_MaM49")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("MoTa")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("TenTA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TenTV")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("MaM49");

                    b.HasIndex("ChauLuc_MaM49");

                    b.ToTable("DanhMuc_KhuVucQuocGia");
                });

            modelBuilder.Entity("HDatabasePortal.Data.Entities.DiaPhuong.DanhMuc_KhuVucTinhThanhCap1", b =>
                {
                    b.Property<string>("Ma")
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("QuocGia_MaM49")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("Ten")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Ma");

                    b.HasIndex("QuocGia_MaM49");

                    b.ToTable("DanhMuc_KhuVucTinhThanhCap1");
                });

            modelBuilder.Entity("HDatabasePortal.Data.Entities.DiaPhuong.DanhMuc_KhuVucTinhThanhCap2", b =>
                {
                    b.Property<string>("Ma")
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("KhuVucTinhThanhCap1_Ma")
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("MoTa")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Ten")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Ma");

                    b.HasIndex("KhuVucTinhThanhCap1_Ma");

                    b.ToTable("DanhMuc_KhuVucTinhThanhCap2");
                });

            modelBuilder.Entity("HDatabasePortal.Data.Entities.DiaPhuong.DanhMuc_QuanHuyen", b =>
                {
                    b.Property<string>("MaHanhChinh")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("CapQuanHuyen_Ma")
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("MaBuuChinh")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Ten")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TenKhac")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TinhThanh_MaHanhChinh")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.HasKey("MaHanhChinh");

                    b.HasIndex("CapQuanHuyen_Ma");

                    b.HasIndex("TinhThanh_MaHanhChinh");

                    b.ToTable("DanhMuc_QuanHuyen");
                });

            modelBuilder.Entity("HDatabasePortal.Data.Entities.DiaPhuong.DanhMuc_QuocGia", b =>
                {
                    b.Property<string>("MaM49")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("KhuVucQuocGia_MaM49")
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("MaAlpha2")
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("MaAlpha3")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("MaBuuChinh")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("MoTa")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("MuiGio")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("QuocKy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("QuocTich")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TenTA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TenTV")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("MaM49");

                    b.HasIndex("KhuVucQuocGia_MaM49");

                    b.ToTable("DanhMuc_QuocGia");
                });

            modelBuilder.Entity("HDatabasePortal.Data.Entities.DiaPhuong.DanhMuc_TinhThanh", b =>
                {
                    b.Property<string>("MaHanhChinh")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("CapTinhThanh_Ma")
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<DateTime?>("DenNgay")
                        .HasColumnType("datetime2");

                    b.Property<string>("KhuVucTinhThanhCap2_Ma")
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("MaBuuChinh")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("MaVungDienThoai")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("MoTa")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Ten")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TenKhac")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("TuNgay")
                        .HasColumnType("datetime2");

                    b.HasKey("MaHanhChinh");

                    b.HasIndex("CapTinhThanh_Ma");

                    b.HasIndex("KhuVucTinhThanhCap2_Ma");

                    b.ToTable("DanhMuc_TinhThanh");
                });

            modelBuilder.Entity("HDatabasePortal.Data.Entities.DiaPhuong.DanhMuc_XaPhuong", b =>
                {
                    b.Property<string>("MaHanhChinh")
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.Property<string>("CapXaPhuong_Ma")
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("MaBuuChinh")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("QuanHuyen_MaHanhChinh")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("Ten")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TenKhac")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("MaHanhChinh");

                    b.HasIndex("CapXaPhuong_Ma");

                    b.HasIndex("QuanHuyen_MaHanhChinh");

                    b.ToTable("DanhMuc_XaPhuong");
                });

            modelBuilder.Entity("HDatabasePortal.Data.Entities.NgheNghiep.DanhMuc_NgheNghiepCap1", b =>
                {
                    b.Property<string>("Ma")
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("MoTa")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Ten")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Ma");

                    b.ToTable("DanhMuc_NgheNghiepCap1");
                });

            modelBuilder.Entity("HDatabasePortal.Data.Entities.NgheNghiep.DanhMuc_NgheNghiepCap2", b =>
                {
                    b.Property<string>("Ma")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("MoTa")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("NgheNghiepCap1_Ma")
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("Ten")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Ma");

                    b.HasIndex("NgheNghiepCap1_Ma");

                    b.ToTable("DanhMuc_NgheNghiepCap2");
                });

            modelBuilder.Entity("HDatabasePortal.Data.Entities.NgheNghiep.DanhMuc_NgheNghiepCap3", b =>
                {
                    b.Property<string>("Ma")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("MoTa")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("NgheNghiepCap2_Ma")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("Ten")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Ma");

                    b.HasIndex("NgheNghiepCap2_Ma");

                    b.ToTable("DanhMuc_NgheNghiepCap3");
                });

            modelBuilder.Entity("HDatabasePortal.Data.Entities.NgheNghiep.DanhMuc_NgheNghiepCap4", b =>
                {
                    b.Property<string>("Ma")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("MoTa")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("NgheNghiepCap3_Ma")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("Ten")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Ma");

                    b.HasIndex("NgheNghiepCap3_Ma");

                    b.ToTable("DanhMuc_NgheNghiepCap4");
                });

            modelBuilder.Entity("HDatabasePortal.Data.Entities.NgheNghiep.DanhMuc_NgheNghiepCap5", b =>
                {
                    b.Property<string>("Ma")
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.Property<string>("MoTa")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("NgheNghiepCap4_Ma")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("Ten")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Ma");

                    b.HasIndex("NgheNghiepCap4_Ma");

                    b.ToTable("DanhMuc_NgheNghiepCap5");
                });

            modelBuilder.Entity("HDatabasePortal.Data.Entities.NguoiDung.AspNetRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("HDatabasePortal.Data.Entities.NguoiDung.AspNetRoleClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .HasMaxLength(50)
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("HDatabasePortal.Data.Entities.NguoiDung.AspNetUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoDinhDanh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("HDatabasePortal.Data.Entities.NguoiDung.AspNetUserClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasMaxLength(50)
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("HDatabasePortal.Data.Entities.NguoiDung.AspNetUserLogin", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasMaxLength(50)
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("HDatabasePortal.Data.Entities.NguoiDung.AspNetUserRole", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasMaxLength(50)
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasMaxLength(50)
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("HDatabasePortal.Data.Entities.NguoiDung.AspNetUserToken", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasMaxLength(50)
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("HDatabasePortal.Data.Entities.NhomMau.DanhMuc_NhomMauHeABO", b =>
                {
                    b.Property<string>("Ma")
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("Ten")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Ma");

                    b.ToTable("DanhMuc_NhomMauHeABO");
                });

            modelBuilder.Entity("HDatabasePortal.Data.Entities.NhomMau.DanhMuc_NhomMauHeRH", b =>
                {
                    b.Property<string>("Ma")
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("Ten")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Ma");

                    b.ToTable("DanhMuc_NhomMauHeRH");
                });

            modelBuilder.Entity("HDatabasePortal.Data.Entities.ThongTinCongDan.CongDan", b =>
                {
                    b.Property<string>("SoDinhDanh")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<Guid?>("AspNetUser_ID")
                        .HasMaxLength(50)
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ChuDem")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("GioiTinhMa")
                        .HasColumnType("int");

                    b.Property<int>("GioiTinh_Ma")
                        .HasColumnType("int");

                    b.Property<string>("Ho")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("NamSinh")
                        .HasColumnType("int");

                    b.Property<DateTime?>("NgayThangNamSinh")
                        .HasColumnType("datetime2");

                    b.Property<string>("NgheNghiepCap5Ma")
                        .HasColumnType("nvarchar(6)");

                    b.Property<string>("NgheNghiepCap5_Ma")
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.Property<string>("SoChungMinhNhanDan")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("Ten")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("SoDinhDanh");

                    b.HasIndex("AspNetUser_ID")
                        .IsUnique()
                        .HasFilter("[AspNetUser_ID] IS NOT NULL");

                    b.HasIndex("GioiTinhMa");

                    b.HasIndex("NgheNghiepCap5Ma");

                    b.ToTable("CongDan");
                });

            modelBuilder.Entity("HDatabasePortal.Data.Entities.ThongTinCongDan.DanhMuc_GioiTinh", b =>
                {
                    b.Property<int>("Ma")
                        .HasColumnType("int");

                    b.Property<string>("Ten")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Ma");

                    b.ToTable("DanhMuc_GioiTinh");
                });

            modelBuilder.Entity("HDatabasePortal.Data.Entities.ThongTinCongDan.DanhMuc_QuanHe", b =>
                {
                    b.Property<string>("Ma")
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("Ten")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Ma");

                    b.ToTable("DanhMuc_QuanHe");
                });

            modelBuilder.Entity("HDatabasePortal.Data.Entities.ThongTinCongDan.DanhMuc_TinhTrangHonNhan", b =>
                {
                    b.Property<string>("Ma")
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("Ten")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Ma");

                    b.ToTable("DanhMuc_TinhTrangHonNhan");
                });

            modelBuilder.Entity("HDatabasePortal.Data.Entities.TonGiao.DanhMuc_CacToChucTonGiaoChinh", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Ten")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TonGiao_Ma")
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.HasKey("ID");

                    b.HasIndex("TonGiao_Ma");

                    b.ToTable("DanhMuc_CacToChucTonGiaoChinh");
                });

            modelBuilder.Entity("HDatabasePortal.Data.Entities.TonGiao.DanhMuc_TonGiao", b =>
                {
                    b.Property<string>("Ma")
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("Ten")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Ma");

                    b.ToTable("DanhMuc_TonGiao");
                });

            modelBuilder.Entity("HDatabasePortal.Data.Entities.DiaPhuong.DanhMuc_KhuVucQuocGia", b =>
                {
                    b.HasOne("HDatabasePortal.Data.Entities.DiaPhuong.DanhMuc_ChauLuc", "ChauLuc")
                        .WithMany("DS_KhuVucQuocGia")
                        .HasForeignKey("ChauLuc_MaM49");

                    b.Navigation("ChauLuc");
                });

            modelBuilder.Entity("HDatabasePortal.Data.Entities.DiaPhuong.DanhMuc_KhuVucTinhThanhCap1", b =>
                {
                    b.HasOne("HDatabasePortal.Data.Entities.DiaPhuong.DanhMuc_QuocGia", "QuocGia")
                        .WithMany("DS_KhuVucTinhThanhCap1")
                        .HasForeignKey("QuocGia_MaM49");

                    b.Navigation("QuocGia");
                });

            modelBuilder.Entity("HDatabasePortal.Data.Entities.DiaPhuong.DanhMuc_KhuVucTinhThanhCap2", b =>
                {
                    b.HasOne("HDatabasePortal.Data.Entities.DiaPhuong.DanhMuc_KhuVucTinhThanhCap1", "KhuVucTinhThanhCap1")
                        .WithMany("DS_KhuVucTinhThanhCap2")
                        .HasForeignKey("KhuVucTinhThanhCap1_Ma");

                    b.Navigation("KhuVucTinhThanhCap1");
                });

            modelBuilder.Entity("HDatabasePortal.Data.Entities.DiaPhuong.DanhMuc_QuanHuyen", b =>
                {
                    b.HasOne("HDatabasePortal.Data.Entities.DiaPhuong.DanhMuc_CapQuanHuyen", "CapQuanHuyen")
                        .WithMany("DS_QuanHuyen")
                        .HasForeignKey("CapQuanHuyen_Ma");

                    b.HasOne("HDatabasePortal.Data.Entities.DiaPhuong.DanhMuc_TinhThanh", "TinhThanh")
                        .WithMany("DS_QuanHuyen")
                        .HasForeignKey("TinhThanh_MaHanhChinh");

                    b.Navigation("CapQuanHuyen");

                    b.Navigation("TinhThanh");
                });

            modelBuilder.Entity("HDatabasePortal.Data.Entities.DiaPhuong.DanhMuc_QuocGia", b =>
                {
                    b.HasOne("HDatabasePortal.Data.Entities.DiaPhuong.DanhMuc_KhuVucQuocGia", "KhuVucQuocGia")
                        .WithMany("DS_QuocGia")
                        .HasForeignKey("KhuVucQuocGia_MaM49");

                    b.Navigation("KhuVucQuocGia");
                });

            modelBuilder.Entity("HDatabasePortal.Data.Entities.DiaPhuong.DanhMuc_TinhThanh", b =>
                {
                    b.HasOne("HDatabasePortal.Data.Entities.DiaPhuong.DanhMuc_CapTinhThanh", "CapTinhThanh")
                        .WithMany("DS_TinhThanh")
                        .HasForeignKey("CapTinhThanh_Ma");

                    b.HasOne("HDatabasePortal.Data.Entities.DiaPhuong.DanhMuc_KhuVucTinhThanhCap2", "KhuVucTinhThanhCap2")
                        .WithMany("DS_TinhThanh")
                        .HasForeignKey("KhuVucTinhThanhCap2_Ma");

                    b.Navigation("CapTinhThanh");

                    b.Navigation("KhuVucTinhThanhCap2");
                });

            modelBuilder.Entity("HDatabasePortal.Data.Entities.DiaPhuong.DanhMuc_XaPhuong", b =>
                {
                    b.HasOne("HDatabasePortal.Data.Entities.DiaPhuong.DanhMuc_CapXaPhuong", "CapXaPhuong")
                        .WithMany("DS_XaPhuong")
                        .HasForeignKey("CapXaPhuong_Ma");

                    b.HasOne("HDatabasePortal.Data.Entities.DiaPhuong.DanhMuc_QuanHuyen", "QuanHuyen")
                        .WithMany("DS_XaPhuong")
                        .HasForeignKey("QuanHuyen_MaHanhChinh");

                    b.Navigation("CapXaPhuong");

                    b.Navigation("QuanHuyen");
                });

            modelBuilder.Entity("HDatabasePortal.Data.Entities.NgheNghiep.DanhMuc_NgheNghiepCap2", b =>
                {
                    b.HasOne("HDatabasePortal.Data.Entities.NgheNghiep.DanhMuc_NgheNghiepCap1", "NgheNghiepCap1")
                        .WithMany("DS_NgheNghiepCap2")
                        .HasForeignKey("NgheNghiepCap1_Ma");

                    b.Navigation("NgheNghiepCap1");
                });

            modelBuilder.Entity("HDatabasePortal.Data.Entities.NgheNghiep.DanhMuc_NgheNghiepCap3", b =>
                {
                    b.HasOne("HDatabasePortal.Data.Entities.NgheNghiep.DanhMuc_NgheNghiepCap2", "NgheNghiepCap2")
                        .WithMany("DS_NgheNghiepCap3")
                        .HasForeignKey("NgheNghiepCap2_Ma");

                    b.Navigation("NgheNghiepCap2");
                });

            modelBuilder.Entity("HDatabasePortal.Data.Entities.NgheNghiep.DanhMuc_NgheNghiepCap4", b =>
                {
                    b.HasOne("HDatabasePortal.Data.Entities.NgheNghiep.DanhMuc_NgheNghiepCap3", "NgheNghiepCap3")
                        .WithMany("DS_NgheNghiepCap4")
                        .HasForeignKey("NgheNghiepCap3_Ma");

                    b.Navigation("NgheNghiepCap3");
                });

            modelBuilder.Entity("HDatabasePortal.Data.Entities.NgheNghiep.DanhMuc_NgheNghiepCap5", b =>
                {
                    b.HasOne("HDatabasePortal.Data.Entities.NgheNghiep.DanhMuc_NgheNghiepCap4", "NgheNghiepCap4")
                        .WithMany("DS_NgheNghiepCap5")
                        .HasForeignKey("NgheNghiepCap4_Ma");

                    b.Navigation("NgheNghiepCap4");
                });

            modelBuilder.Entity("HDatabasePortal.Data.Entities.NguoiDung.AspNetRoleClaim", b =>
                {
                    b.HasOne("HDatabasePortal.Data.Entities.NguoiDung.AspNetRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HDatabasePortal.Data.Entities.NguoiDung.AspNetUserClaim", b =>
                {
                    b.HasOne("HDatabasePortal.Data.Entities.NguoiDung.AspNetUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HDatabasePortal.Data.Entities.NguoiDung.AspNetUserLogin", b =>
                {
                    b.HasOne("HDatabasePortal.Data.Entities.NguoiDung.AspNetUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HDatabasePortal.Data.Entities.NguoiDung.AspNetUserRole", b =>
                {
                    b.HasOne("HDatabasePortal.Data.Entities.NguoiDung.AspNetRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HDatabasePortal.Data.Entities.NguoiDung.AspNetUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HDatabasePortal.Data.Entities.NguoiDung.AspNetUserToken", b =>
                {
                    b.HasOne("HDatabasePortal.Data.Entities.NguoiDung.AspNetUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HDatabasePortal.Data.Entities.ThongTinCongDan.CongDan", b =>
                {
                    b.HasOne("HDatabasePortal.Data.Entities.NguoiDung.AspNetUser", "TaiKhoan")
                        .WithOne("CongDan")
                        .HasForeignKey("HDatabasePortal.Data.Entities.ThongTinCongDan.CongDan", "AspNetUser_ID");

                    b.HasOne("HDatabasePortal.Data.Entities.ThongTinCongDan.DanhMuc_GioiTinh", "GioiTinh")
                        .WithMany("DS_CongDan")
                        .HasForeignKey("GioiTinhMa");

                    b.HasOne("HDatabasePortal.Data.Entities.NgheNghiep.DanhMuc_NgheNghiepCap5", "NgheNghiepCap5")
                        .WithMany()
                        .HasForeignKey("NgheNghiepCap5Ma");

                    b.Navigation("GioiTinh");

                    b.Navigation("NgheNghiepCap5");

                    b.Navigation("TaiKhoan");
                });

            modelBuilder.Entity("HDatabasePortal.Data.Entities.TonGiao.DanhMuc_CacToChucTonGiaoChinh", b =>
                {
                    b.HasOne("HDatabasePortal.Data.Entities.TonGiao.DanhMuc_TonGiao", "TonGiao")
                        .WithMany("DS_CacToChucTonGiaoChinh")
                        .HasForeignKey("TonGiao_Ma");

                    b.Navigation("TonGiao");
                });

            modelBuilder.Entity("HDatabasePortal.Data.Entities.DiaPhuong.DanhMuc_CapQuanHuyen", b =>
                {
                    b.Navigation("DS_QuanHuyen");
                });

            modelBuilder.Entity("HDatabasePortal.Data.Entities.DiaPhuong.DanhMuc_CapTinhThanh", b =>
                {
                    b.Navigation("DS_TinhThanh");
                });

            modelBuilder.Entity("HDatabasePortal.Data.Entities.DiaPhuong.DanhMuc_CapXaPhuong", b =>
                {
                    b.Navigation("DS_XaPhuong");
                });

            modelBuilder.Entity("HDatabasePortal.Data.Entities.DiaPhuong.DanhMuc_ChauLuc", b =>
                {
                    b.Navigation("DS_KhuVucQuocGia");
                });

            modelBuilder.Entity("HDatabasePortal.Data.Entities.DiaPhuong.DanhMuc_KhuVucQuocGia", b =>
                {
                    b.Navigation("DS_QuocGia");
                });

            modelBuilder.Entity("HDatabasePortal.Data.Entities.DiaPhuong.DanhMuc_KhuVucTinhThanhCap1", b =>
                {
                    b.Navigation("DS_KhuVucTinhThanhCap2");
                });

            modelBuilder.Entity("HDatabasePortal.Data.Entities.DiaPhuong.DanhMuc_KhuVucTinhThanhCap2", b =>
                {
                    b.Navigation("DS_TinhThanh");
                });

            modelBuilder.Entity("HDatabasePortal.Data.Entities.DiaPhuong.DanhMuc_QuanHuyen", b =>
                {
                    b.Navigation("DS_XaPhuong");
                });

            modelBuilder.Entity("HDatabasePortal.Data.Entities.DiaPhuong.DanhMuc_QuocGia", b =>
                {
                    b.Navigation("DS_KhuVucTinhThanhCap1");
                });

            modelBuilder.Entity("HDatabasePortal.Data.Entities.DiaPhuong.DanhMuc_TinhThanh", b =>
                {
                    b.Navigation("DS_QuanHuyen");
                });

            modelBuilder.Entity("HDatabasePortal.Data.Entities.NgheNghiep.DanhMuc_NgheNghiepCap1", b =>
                {
                    b.Navigation("DS_NgheNghiepCap2");
                });

            modelBuilder.Entity("HDatabasePortal.Data.Entities.NgheNghiep.DanhMuc_NgheNghiepCap2", b =>
                {
                    b.Navigation("DS_NgheNghiepCap3");
                });

            modelBuilder.Entity("HDatabasePortal.Data.Entities.NgheNghiep.DanhMuc_NgheNghiepCap3", b =>
                {
                    b.Navigation("DS_NgheNghiepCap4");
                });

            modelBuilder.Entity("HDatabasePortal.Data.Entities.NgheNghiep.DanhMuc_NgheNghiepCap4", b =>
                {
                    b.Navigation("DS_NgheNghiepCap5");
                });

            modelBuilder.Entity("HDatabasePortal.Data.Entities.NguoiDung.AspNetUser", b =>
                {
                    b.Navigation("CongDan");
                });

            modelBuilder.Entity("HDatabasePortal.Data.Entities.ThongTinCongDan.DanhMuc_GioiTinh", b =>
                {
                    b.Navigation("DS_CongDan");
                });

            modelBuilder.Entity("HDatabasePortal.Data.Entities.TonGiao.DanhMuc_TonGiao", b =>
                {
                    b.Navigation("DS_CacToChucTonGiaoChinh");
                });
#pragma warning restore 612, 618
        }
    }
}
